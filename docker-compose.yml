version: "3.8"
services:
    golang_echo_api:
        container_name: golang_echo_api
        build:
            context: .
            dockerfile: Dockerfile
        expose:
            - 5050
        env_file:
            - .env.docker
        networks:
            - golang_echo_network
        depends_on:
            - golang_echo_mongo
        restart: "on-failure"

    golang_echo_mongo:
        image: mongo:latest
        container_name: golang_echo_mongo
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: password
            MONGO_INITDB_DATABASE: golang_echodb
        networks:
            - golang_echo_network
        ports:
            - "27017:27017"
        volumes:
            - ./mongo:/data/db

    golang_echo_nginx:
        build:
            context:  ./nginx
            dockerfile: Dockerfile
        ports:
            - "5001:80"
        networks:
            - golang_echo_network
        depends_on:
            - golang_echo_api
        links:
            - golang_echo_api:golang_echo_api

    golang_echo_prometheus:
        image: prom/prometheus:latest
        container_name: golang_echo_prometheus
        ports:
            - "9090:9090"
        networks:
            - golang_echo_network
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - ./prometheus:/var/lib/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        restart: unless-stopped

    golang_echo_grafana:
        image: grafana/grafana
        ports:
            - "3000:3000"
        networks:
            - golang_echo_network

volumes:
    mongo:
networks:
    golang_echo_network:
        driver: bridge
